"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1268],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,h=c["".concat(o,".").concat(d)]||c[d]||m[d]||l;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<l;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4306:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},s="Update List",i={unversionedId:"updates/updates-list",id:"updates/updates-list",title:"Update List",description:"Evogram supports all events available in the Telegram API. Let's take a look at what events exist and what information we get.",source:"@site/docs/updates/updates-list.md",sourceDirName:"updates",slug:"/updates/updates-list",permalink:"/evogram/docs/updates/updates-list",draft:!1,editUrl:"https://github.com/czvelox/evogram/docs/docs/updates/updates-list.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Update Handling",permalink:"/evogram/docs/updates/updates-handler"}},o={},p=[{value:"message",id:"message",level:3},{value:"edited_message",id:"edited_message",level:3},{value:"channel_post",id:"channel_post",level:3},{value:"edited_channel_post",id:"edited_channel_post",level:3},{value:"inline_query",id:"inline_query",level:3},{value:"chosen_inline_result",id:"chosen_inline_result",level:3},{value:"callback_query",id:"callback_query",level:3},{value:"shipping_query",id:"shipping_query",level:3},{value:"pre_checkout_query",id:"pre_checkout_query",level:3},{value:"poll",id:"poll",level:3},{value:"poll_answer",id:"poll_answer",level:3},{value:"my_chat_member",id:"my_chat_member",level:3},{value:"chat_member",id:"chat_member",level:3},{value:"chat_join_request",id:"chat_join_request",level:3}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"update-list"},"Update List"),(0,r.kt)("p",null,"Evogram supports all events available in the Telegram API. Let's take a look at what events exist and what information we get."),(0,r.kt)("h3",{id:"message"},"message"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"message")," event occurs every time a user sends a message to a chat or bot. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"UserMessageContext"),", with which we can send messages, obtain information about the user, chat."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("message", (message) => {\n    message.send(`${message.user.fullname}, thank you for writing to us!`);\n});\n')),(0,r.kt)("h3",{id:"edited_message"},"edited_message"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"edited_message")," event occurs every time a user edits a message already sent in a chat or bot. We also receive ",(0,r.kt)("inlineCode",{parentName:"p"},"UserMessageContext"),", but with the updated message text."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("edited_message", (message) => {\n    message.send(`${message.user.fullname}, you have edited your message!`);\n});\n')),(0,r.kt)("h3",{id:"channel_post"},"channel_post"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"channel_post")," event occurs every time a new message appears in the channel. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageContext"),", which contains information about the message and channel, as well as the sender, etc."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("channel_post", (post) => {\n    console.log(`A new post ${post.authorSignature ? `(by ${post.authorSignature})` : ``} has been published in the "${post.chat.title}" channel`);\n});\n')),(0,r.kt)("h3",{id:"edited_channel_post"},"edited_channel_post"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"edited_channel_post")," event occurs every time a sent message in the channel was changed. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageContext"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("edited_channel_post", (post) => {\n    console.log(`The post ${post.authorSignature ? `(by ${post.authorSignature})` : ``} in the "${post.chat.title}" channel has been edited`);\n});\n')),(0,r.kt)("h3",{id:"inline_query"},"inline_query"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"inline_query")," event occurs every time a user uses the bot's inline mode. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"InlineQueryContext"),", which contains the query text and user data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("inline_query", (query) => {\n    query.answer([{\n        id: "1",\n        type: "article",\n        title: "Hello, world!",\n        description: "This is an article sample.",\n        input_message_content: {\n            message_text: "You selected the \'Hello, world!\' article."\n        }\n    }]);\n});\n')),(0,r.kt)("h3",{id:"chosen_inline_result"},"chosen_inline_result"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"chosen_inline_result")," event occurs every time a user selects a result from the list that we send him in response to his inline query. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"ChosenInlineResultContext"),", which contains information about the selected result and the user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("chosen_inline_result", (result) => {\n    console.log(`User ${result.user.fullname} has chosen the result with ID ${result.id}`);\n});\n')),(0,r.kt)("h3",{id:"callback_query"},"callback_query"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"callback_query")," event occurs every time a user clicks a button in a message. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"CallbackQueryContext"),", which contains information about the user, chat, and pressed button."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("callback_query", (query) => {\n    query.answer({\n        text: "You pressed the button!",\n        show_alert: true\n    });\n});\n')),(0,r.kt)("h3",{id:"shipping_query"},"shipping_query"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"shipping_query")," event occurs when a user requests information about payment and delivery. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"ShippingQueryContext"),", which contains information about the user and delivery request."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("shipping_query", (query) => {\n    console.log(`User ${query.user.fullname} requests delivery information`);\n    query.answer(true);\n});\n')),(0,r.kt)("h3",{id:"pre_checkout_query"},"pre_checkout_query"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"pre_checkout_query")," event occurs when a user requests a check before placing an order. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"PreCheckoutQueryContext"),", which contains information about the user and the order."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("pre_checkout_query", (query) => {\n    console.log(`User ${query.user.fullname} requested a pre-checkout verification.`);\n});\n')),(0,r.kt)("h3",{id:"poll"},"poll"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"poll")," event occurs every time a user creates a poll in the chat. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"PollContext"),", which contains information about the poll."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},"client.updates.on(\"poll\", (poll) => {\n    console.log(`A poll was created: '${poll.question}'`);\n});\n")),(0,r.kt)("h3",{id:"poll_answer"},"poll_answer"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"poll_answer")," event occurs every time a user votes in a poll. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"PollAnswerContext"),", which contains information about the user and answers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("poll_answer", (answer) => {\n    console.log(`User ${answer.user.fullname} voted in the poll`);\n});\n')),(0,r.kt)("h3",{id:"my_chat_member"},"my_chat_member"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"my_chat_member")," event occurs every time your bot joins / leaves / has been removed from a chat. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatMemberContext"),", which contains information about the user and the bot's participation status in the chat."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("my_chat_member", (member) => {\n    console.log(`The bot has been ${member.newChatMember.status} from ${member.chat.title}`);\n});\n')),(0,r.kt)("h3",{id:"chat_member"},"chat_member"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"chat_member")," event occurs every time a user joins / leaves / has been removed from a chat. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatMemberContext"),", which contains information about the user and the user's participation status in the chat."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("chat_member", (member) => {\n    console.log(`${member.user.fullname} has been ${member.newChatMember.status} from ${member.chat.title}`);\n});\n')),(0,r.kt)("h3",{id:"chat_join_request"},"chat_join_request"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"chat_join_request")," event occurs every time a user sends a request to join a group. We receive ",(0,r.kt)("inlineCode",{parentName:"p"},"ChatJoinRequestContext"),", which contains information about the user and the group."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Usage example"',title:'"Usage','example"':!0},'client.updates.on("chat_join_request", (request) => {\n    console.log(`User ${request.user.fullname} requests to join the ${request.chat.title} group`);\n    request.approve()\n});\n')))}m.isMDXComponent=!0}}]);