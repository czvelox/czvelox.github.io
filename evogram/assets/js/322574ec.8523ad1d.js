"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[352],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),u=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(m.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(n),l=a,p=c["".concat(m,".").concat(l)]||c[l]||g[l]||o;return n?r.createElement(p,s(s({ref:t},d),{},{components:n})):r.createElement(p,s({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=l;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},1178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={},s="Obtaining Command Arguments",i={unversionedId:"getting-started/get-arguments-command",id:"getting-started/get-arguments-command",title:"Obtaining Command Arguments",description:"Suppose, we need to find out how old the user is. Requesting arguments is available right out of the box in the module, all you have to do is specify which arguments are required.",source:"@site/docs/getting-started/get-arguments-command.md",sourceDirName:"getting-started",slug:"/getting-started/get-arguments-command",permalink:"/evogram/docs/getting-started/get-arguments-command",draft:!1,editUrl:"https://github.com/czvelox/evogram/docs/docs/getting-started/get-arguments-command.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Obtaining a Bot API Token",permalink:"/evogram/docs/getting-started/get-api-token"},next:{title:"First Evogram Bot",permalink:"/evogram/docs/getting-started/your-first-bot"}},m={},u=[{value:"Setting up command arguments",id:"setting-up-command-arguments",level:2}],d={toc:u},c="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"obtaining-command-arguments"},"Obtaining Command Arguments"),(0,a.kt)("p",null,"Suppose, we need to find out how old the user is. Requesting arguments is available right out of the box in the module, all you have to do is specify which arguments are required."),(0,a.kt)("h2",{id:"setting-up-command-arguments"},"Setting up command arguments"),(0,a.kt)("p",null,"All setup occurs in the ",(0,a.kt)("strong",{parentName:"p"},"CommandHandler"),". To specify that we want to request the user's age, let's change the ",(0,a.kt)("strong",{parentName:"p"},"/start")," command code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="/src/commands/start.ts"',title:'"/src/commands/start.ts"'},'import { Command, CommandHandler, MessageContext, ICommandExecuteData } from "evogram"\n\n@CommandHandler({\n    name: "start",\n    args: {\n        // Argument acceptance method.\n        method: "stdin",\n        // In the array, specify which arguments we need.\n        // First, the argument name is passed, this is mandatory, and then the parameters to this argument (question is used with the stdin method), they are optional.\n        value: [["age", { question: "How old are you?" }]]\n    }\n})\nclass StartCommand extends Command {\n    execute(message: MessageContext, data: ICommandExecuteData) {\n        if(!Number(data.args?.age)) return message.send("I didn\'t understand how old you are, please try again!");\n        message.send(Number(data.args.age) >= 18 ? `You are already an adult!` : `You are still a minor :(`);\n    }\n}\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can read more about command arguments ",(0,a.kt)("a",{parentName:"p",href:"/evogram/docs/modules/commands/command-setup/command-arguments"},"here"))))}g.isMDXComponent=!0}}]);