"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9041],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=u(n),m=s,h=c["".concat(l,".").concat(m)]||c[m]||p[m]||a;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[c]="string"==typeof e?e:s,i[1]=r;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>u});var o=n(7462),s=(n(7294),n(3905));const a={},i="Questions Module",r={unversionedId:"modules/questions/questions",id:"modules/questions/questions",title:"Questions Module",description:"The Questions module is designed to capture messages in Telegram and pass them to a callback function. This allows you to easily implement application logic based on user messages. This module is also used in MessageContext in the question method. The module is stored in an Evogram instance in the modules object (client.modules.questions).",source:"@site/docs/modules/questions/questions.md",sourceDirName:"modules/questions",slug:"/modules/questions/",permalink:"/evogram/docs/modules/questions/",draft:!1,editUrl:"https://github.com/czvelox/evogram/docs/docs/modules/questions/questions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Command Description Installation",permalink:"/evogram/docs/modules/commands/command-setup/command-description"},next:{title:"Updates",permalink:"/evogram/docs/updates/"}},l={},u=[{value:"Methods",id:"methods",level:2},{value:"addQuestion(user_id, callback)",id:"addquestionuser_id-callback",level:4},{value:"getQuestion(user_id, deleteQuestion)",id:"getquestionuser_id-deletequestion",level:4},{value:"Usage example",id:"usage-example",level:2}],d={toc:u},c="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(c,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"questions-module"},"Questions Module"),(0,s.kt)("p",null,"The Questions module is designed to capture messages in Telegram and pass them to a callback function. This allows you to easily implement application logic based on user messages. This module is also used in ",(0,s.kt)("inlineCode",{parentName:"p"},"MessageContext")," in the ",(0,s.kt)("inlineCode",{parentName:"p"},"question")," method. The module is stored in an Evogram instance in the modules object (",(0,s.kt)("inlineCode",{parentName:"p"},"client.modules.questions"),")."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Working directly with the module is necessary when you need to request data outside of a command/event, where a ",(0,s.kt)("inlineCode",{parentName:"p"},"UserMessageContext")," is passed. If you have a ",(0,s.kt)("inlineCode",{parentName:"p"},"UserMessageContext"),", use the built-in ",(0,s.kt)("inlineCode",{parentName:"p"},"question")," method.")),(0,s.kt)("h2",{id:"methods"},"Methods"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"QuestionManager")," class has two main methods that are necessary for working with the module."),(0,s.kt)("h4",{id:"addquestionuser_id-callback"},"addQuestion(user_id, callback)"),(0,s.kt)("p",null,"Adds a new question to the queue for the specified user and associates it with the passed ",(0,s.kt)("inlineCode",{parentName:"p"},"callback"),"."),(0,s.kt)("p",null,"Accepts two parameters:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"user_id"),": The ID of the user who asked the question."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"callback"),": The callback function that will be called when the user responds.")),(0,s.kt)("h4",{id:"getquestionuser_id-deletequestion"},"getQuestion(user_id, deleteQuestion)"),(0,s.kt)("p",null,"Gets the callback function associated with the specified user and removes it from the queue if the ",(0,s.kt)("inlineCode",{parentName:"p"},"deleteQuestion")," parameter is set to ",(0,s.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,s.kt)("p",null,"Accepts two parameters:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"user_id"),": The ID of the user whose callback function should be obtained."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"deleteQuestion"),": (Optional) A flag indicating whether to remove the question from the queue after receiving the callback. Default is ",(0,s.kt)("inlineCode",{parentName:"li"},"true"),".")),(0,s.kt)("h2",{id:"usage-example"},"Usage example"),(0,s.kt)("p",null,"Let's write code that will request a user's response and output it to the console."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'client.modules.questions.addQuestion(1, (message) => {\n    console.log(message.text);\n    message.reply("Thank you for your answer!");\n})\n')),(0,s.kt)("p",null,"In this example, ",(0,s.kt)("inlineCode",{parentName:"p"},"client")," is an instance of ",(0,s.kt)("inlineCode",{parentName:"p"},"Evogram"),"."))}p.isMDXComponent=!0}}]);